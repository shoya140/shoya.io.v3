<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>shoya.io</title>
    <description></description>
    <link>http://shoya.io/</link>
    <atom:link href="http://shoya.io/feed.xml" rel="self" type="application/rss+xml" />
    <pubDate>Fri, 28 Nov 2014 14:00:28 +0900</pubDate>
    <lastBuildDate>Fri, 28 Nov 2014 14:00:28 +0900</lastBuildDate>
    <generator>Jekyll v2.4.0</generator>
    
      <item>
        <title>Sublime Text3でLaTeXをコンパイルする[Mac]</title>
        <description>&lt;p&gt;Sublime Textにはcommand+bでコードを実行する機能(Build System)がある。今回はビルドできるファイルにLaTeXを加えてみた。Sublime TextでLaTeXを扱う方法、調べたらLaTeXToolsとかを入れていろいろ頑張る方法が出てくるのだけれど、既にMacTeXの環境(ターミナルからplatexコマンドなどが使える状態)があるのならもっと簡単に構築できると思う。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://dl.dropboxusercontent.com/u/12208857/img/sublime_latex_01.png&quot; class=&quot;image-on-frame-small&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;section&quot;&gt;手順&lt;/h3&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;Tools&amp;gt;Build System&amp;gt;New Build System…(上図参照)を選択してBuild Systemを作成する。&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;新規ファイルが開かれるので、下記の設定を記入して保存する。ファイル名がメニューバーに表示されるBuild Systemの名前になる。保存場所はデフォルトで ~/Library/Application Support/Sublime Text 3/Packages/User になる。&lt;/p&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;s2&quot;&gt;&amp;quot;shell&amp;quot;&lt;/span&gt;: &lt;span class=&quot;nb&quot;&gt;false&lt;/span&gt;,
  &lt;span class=&quot;s2&quot;&gt;&amp;quot;cmd&amp;quot;&lt;/span&gt;:&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;
    &lt;span class=&quot;s2&quot;&gt;&amp;quot;/bin/sh&amp;quot;&lt;/span&gt;, &lt;span class=&quot;s2&quot;&gt;&amp;quot;-c&amp;quot;&lt;/span&gt;, &lt;span class=&quot;s2&quot;&gt;&amp;quot;/usr/texbin/platex $file_base_name.tex &amp;amp;&amp;amp; /usr/texbin/pbibtex $file_base_name.aux &amp;amp;&amp;amp; /usr/texbin/platex $file_base_name.tex &amp;amp;&amp;amp; /usr/texbin/dvipdfmx -p a4 $file_base_name.dvi &amp;amp;&amp;amp; /usr/bin/open $file_base_name.pdf&amp;quot;&lt;/span&gt;
  &lt;span class=&quot;o&quot;&gt;]&lt;/span&gt;,
  &lt;span class=&quot;s2&quot;&gt;&amp;quot;selector&amp;quot;&lt;/span&gt;: &lt;span class=&quot;s2&quot;&gt;&amp;quot;source.tex&amp;quot;&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h3 id=&quot;section-1&quot;&gt;補足&lt;/h3&gt;

&lt;p&gt;LaTeXからPDFを作成するには、複数回のコンパイルが必要になる。標準で提供されている仕組みではBuild Systemに複数のコマンドを登録することができないので、上記のような黒魔術を使用する。Macの場合は”shell”をfalseに、”cmd”にshとその引数として実行したいコマンドを&amp;amp;&amp;amp;で続けていけばうまく動作するらしい。Windowsの場合は書き方がやや異なる。&lt;cite&gt;&lt;a href=&quot;http://blog.pcitron.fr/2013/02/08/multiple-command-in-sublime-build-system/&quot;&gt;Multiple commands in Sublime Build System&lt;/a&gt;&lt;/cite&gt;を参考に設定した。&lt;/p&gt;
</description>
        <pubDate>Fri, 14 Nov 2014 00:00:00 +0900</pubDate>
        <link>http://shoya.io/blog/sublime-latex/</link>
        <guid isPermaLink="true">http://shoya.io/blog/sublime-latex/</guid>
        
        <category>Infrastructure</category>
        
        
        <category>server</category>
        
      </item>
    
      <item>
        <title>なんで科学者を目指すようになったか</title>
        <description>&lt;p&gt;&lt;img src=&quot;https://dl.dropboxusercontent.com/u/12208857/img/towards_a_scientist_01.jpg&quot; class=&quot;image-on-frame-mini&quot; /&gt;&lt;/p&gt;

&lt;p&gt;幼い頃から「科学」が好きな子供だった。近所の大学が大学祭で&lt;strong&gt;科学体験フェスティバル&lt;/strong&gt;を開催していて、毎年欠かさず参加した。特に鉱物の展示がお気に入りだったので、参加賞の水晶などを集めながら、物心ついた頃は石博士になりたいと思っていた。うちの小学校の卒業式には卒業証書を受け取る際に将来の夢を大声で言うみたいなイベントがあって、「科学者になって世界中の人を幸せにする」と言ったのを覚えている。&lt;/p&gt;

&lt;p&gt;それから中学・高校と理科の授業を受ける中で、興味の対象は物理学・化学・生物学の広く深い方向に伸びていった。高校生の頃に&lt;strong&gt;国際生物学オリンピック&lt;/strong&gt;の日本代表を決める選考会に出たことがあって、惜しいところまでいった。(余談だけどサマーウォーズの「あと少しで日本代表になれたのに。」というセリフは聞く度に心に刺さるものがある。)そこで競った同期がとにかく賢く変わり者揃いだった。懇親会のときにひとりが「俺、東大に行こうと思う。」とつぶやいて、僕も私もといった具合に皆が声をあげた。ものすごく盛り上がり、「大学でまた会おう。」と言い合った。たぶん皆そういった刺激を与え合う相手に飢えていたのだと思う。研究の道に進むなら面白い人がたくさんいる環境で過ごしたい思い、僕も&lt;a href=&quot;/blog/imabari/&quot;&gt;難関校を目指すことを強く決めた&lt;/a&gt;。結果、最初に発言した彼は東大に合格し、僕は阪大を受けるが落ちて府大に進学することになった。&lt;/p&gt;

&lt;p&gt;阪大には基礎工学部という工学と理学を織り交ぜた研究をしているところがある。僕の幅広い興味や視野と合うと思ったのが、進路に阪大を選んだ理由だった。入学したら&lt;strong&gt;脳科学&lt;/strong&gt;の研究をしようと思っていた。第2希望の府大のことはよく知らなかったので、名前をみて知能情報工学科を受験した。脳と能の漢字違いで学部を選んだことを、僕は入学してから知ることになる。&lt;/p&gt;

&lt;p&gt;勘違いで選んだ学部も運命で、僕はそのおかげで&lt;strong&gt;情報工学&lt;/strong&gt;に出会うことになる。プログラミング、あるいは企画やデザインまで含めたソフトウェア開発は、僕の適正にとてもマッチしていると思う。アイデアを形にして公開するまでのスピードは他分野のものづくりを圧倒するものがある。学部3年生の頃にその面白さに気付き、プログラミングを通じて&lt;a href=&quot;/development/&quot;&gt;いろんな(変な)ものを生み出して&lt;/a&gt;、楽しい経験を積むことができた。その結果、もっと情報工学を学びたいと考え、大学や学術分野を変えることなく大学院へ進学した。巡り巡って僕は現在の研究テーマを&lt;strong&gt;情報工学の視点から見た脳科学や認知的行動&lt;/strong&gt;に設定していて、今までの意思決定は間違っていなかったと確信してる。&lt;/p&gt;

&lt;p&gt;僕らの世代も就職活動が始まり、進学するか就職するか、いよいよ選択を先延ばしにできない時期になった。&lt;cite&gt;&lt;a href=&quot;http://memo.sanographix.net/post/69496511652&quot;&gt;なんでデザイナーになったか - MEMOGRAPHIX&lt;/a&gt;&lt;/cite&gt;に影響を受けて、科学者になる道を後押しする材料について書いてみたのでした。(開発者になる道を後押しする材料もたくさんあるので、また改めて書くことになると思う。)&lt;/p&gt;
</description>
        <pubDate>Thu, 13 Nov 2014 00:00:00 +0900</pubDate>
        <link>http://shoya.io/blog/towards-a-scientist/</link>
        <guid isPermaLink="true">http://shoya.io/blog/towards-a-scientist/</guid>
        
        <category>Note</category>
        
        
        <category>coffee</category>
        
      </item>
    
      <item>
        <title>HomebrewでOz開発環境を整える[Mozart2][Emacs]</title>
        <description>&lt;p&gt;「コンピュータプログラミングの概念・技法・モデル」(ガウディ本)のサンプルコードを実行するためにOz言語の環境を整えた。Ozは開発環境であるMozartシステムやEmacsを必要とし、それらはウェブサイト上で無料で公開されているのだけれど、パッケージをダウンロードしてくるのが面倒なのですべてHomebrewで管理することにした。&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;c&quot;&gt;# emacs&lt;/span&gt;
brew install emacs --japanese --cocoa --srgb --with-gnutls -v
brew linkapps

&lt;span class=&quot;c&quot;&gt;# homebrew-cask&lt;/span&gt;
brew tap caskroom/homebrew-cask
brew install brew-cask

&lt;span class=&quot;c&quot;&gt;# mozart&lt;/span&gt;
brew tap caskroom/homebrew-versions
brew cask install mozart2&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h3 id=&quot;section&quot;&gt;補足&lt;/h3&gt;

&lt;p&gt;Emacsについてはインストール方法やパッチが様々のようなので、&lt;cite&gt;&lt;a href=&quot;http://www.sevencredit.com/2014/07/02/580/&quot;&gt;Macで本家EmacsとHomebrew IMEパッチ版とEmacs Mac PortとAquamacsを比べてみる。 - たったのセブンクレジット&lt;/a&gt;を参考にさせていただきインストールオプションを上記に選んだ。&lt;/cite&gt;&lt;/p&gt;

&lt;p&gt;homebrew-versionsに送ったpull requestが無事にmergeされたのでcaskroom/homebrew-caskをtapすることでmozart2.0.0がインストールできるようになった。(本家のhomebrew-caskでインストールできるMozartは安定版の1.4.0)&lt;/p&gt;

&lt;h3 id=&quot;section-1&quot;&gt;動作確認&lt;/h3&gt;

&lt;p&gt;Mozart2.appを起動して2フレームのEmacsが起動すればOKです。&lt;/p&gt;

&lt;div class=&quot;babylink-box&quot; style=&quot;overflow: hidden; font-size: small; zoom: 1; margin: 15px 0; text-align: left;&quot;&gt;&lt;div class=&quot;babylink-image&quot; style=&quot;float: left; margin: 0px 15px 10px 0px; width: 75px; height: 75px; text-align: center;&quot;&gt;&lt;a href=&quot;http://www.amazon.co.jp/exec/obidos/ASIN/4798113468/mrk1869-22/&quot; rel=&quot;nofollow&quot; target=&quot;_blank&quot;&gt;&lt;img style=&quot;border-top: medium none; border-right: medium none; border-bottom: medium none; border-left: medium none;&quot; src=&quot;http://ecx.images-amazon.com/images/I/51iXhiKTamL._SL75_.jpg&quot; width=&quot;59&quot; height=&quot;75&quot; /&gt;&lt;/a&gt;&lt;/div&gt;&lt;div class=&quot;babylink-info&quot; style=&quot;overflow: hidden; zoom: 1; line-height: 120%;&quot;&gt;&lt;div class=&quot;babylink-title&quot; style=&quot;margin-bottom: 2px; line-height: 120%;&quot;&gt;&lt;a href=&quot;http://www.amazon.co.jp/exec/obidos/ASIN/4798113468/mrk1869-22/&quot; rel=&quot;nofollow&quot; target=&quot;_blank&quot;&gt;コンピュータプログラミングの概念・技法・モデル(IT Architect&#39; Archiveクラシックモダン・コンピューティング6) (IT Architects’Archive CLASSIC MODER)&lt;/a&gt;&lt;/div&gt;&lt;div class=&quot;babylink-manufacturer&quot; style=&quot;margin-bottom: 5px;&quot;&gt;セイフ・ハリディ, ピーター・ヴァン・ロイ, Peter Van-Roy, Seif Haridi&lt;/div&gt;&lt;/div&gt;&lt;div class=&quot;booklink-footer&quot; style=&quot;clear: left&quot;&gt;&lt;/div&gt;&lt;/div&gt;
</description>
        <pubDate>Wed, 12 Nov 2014 00:00:00 +0900</pubDate>
        <link>http://shoya.io/blog/brew-mozart/</link>
        <guid isPermaLink="true">http://shoya.io/blog/brew-mozart/</guid>
        
        <category>Infrastructure</category>
        
        
        <category>server</category>
        
      </item>
    
      <item>
        <title>Sublime Text3の画面をctrl+sp,vsで分割する[Mac]</title>
        <description>&lt;p&gt;Sublimeの慣れないキーバインドに、「shift+option+command+数字」で画面を上下分割、「option+command+数字」で画面を左右分割にするものがある。Vimを使っていた名残でこれらの機能をsp(split)とvs(vsplit)に割り当てたいと思ったので、キーバインドを変更することにした。&lt;/p&gt;

&lt;p&gt;デフォルトのキーバインドを変更するには、
1.「Key Bindings - Default」から対象のキーバインドを見つける。
2.「Key Bindings - User」にコピーしてキーの部分を書き換える。
の手順を踏めばいい。commandはsuper, controlはctrlと書く。&lt;/p&gt;

&lt;p&gt;今回は「Key Bindings - User」に以下の設定を記入した。&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-js&quot; data-lang=&quot;js&quot;&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;s2&quot;&gt;&amp;quot;keys&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;ctrl+v&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;ctrl+s&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt;
        &lt;span class=&quot;s2&quot;&gt;&amp;quot;command&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;set_layout&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
        &lt;span class=&quot;s2&quot;&gt;&amp;quot;args&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;s2&quot;&gt;&amp;quot;cols&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;0.0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;0.5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;1.0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt;
            &lt;span class=&quot;s2&quot;&gt;&amp;quot;rows&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;0.0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;1.0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt;
            &lt;span class=&quot;s2&quot;&gt;&amp;quot;cells&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]]&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;s2&quot;&gt;&amp;quot;keys&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;ctrl+s&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;ctrl+p&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt;
        &lt;span class=&quot;s2&quot;&gt;&amp;quot;command&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;set_layout&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
        &lt;span class=&quot;s2&quot;&gt;&amp;quot;args&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;s2&quot;&gt;&amp;quot;cols&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;0.0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;1.0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt;
            &lt;span class=&quot;s2&quot;&gt;&amp;quot;rows&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;0.0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;0.5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;1.0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt;
            &lt;span class=&quot;s2&quot;&gt;&amp;quot;cells&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]]&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;s2&quot;&gt;&amp;quot;keys&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;ctrl+s&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;ctrl+s&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt;
        &lt;span class=&quot;s2&quot;&gt;&amp;quot;command&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;set_layout&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
        &lt;span class=&quot;s2&quot;&gt;&amp;quot;args&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;s2&quot;&gt;&amp;quot;cols&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;0.0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;1.0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt;
            &lt;span class=&quot;s2&quot;&gt;&amp;quot;rows&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;0.0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;1.0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt;
            &lt;span class=&quot;s2&quot;&gt;&amp;quot;cells&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]]&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;この設定で「control+v, control+s」で画面を左右分割、「control+s, control+p」で画面を上下分割、「control+s, control+s」で1画面に戻せる。3, 4つに分割する機会は少ないので今のところはそれぞれ2分割まで。現在の状態からさらに縦横に分割していくにはどうしたらいいんだろう…&lt;/p&gt;

&lt;p&gt;もっと良い方法をご存じの方はぜひ教えてください。&lt;/p&gt;
</description>
        <pubDate>Sat, 08 Nov 2014 00:00:00 +0900</pubDate>
        <link>http://shoya.io/blog/sublime-split/</link>
        <guid isPermaLink="true">http://shoya.io/blog/sublime-split/</guid>
        
        <category>Infrastructure</category>
        
        
        <category>server</category>
        
      </item>
    
      <item>
        <title>Sublime Text3の設定をGit+Dropboxで安全に同期する</title>
        <description>&lt;p&gt;&lt;a href=&quot;http://shoya.io/blog/hello-sublime/&quot;&gt;Sublime Text3導入メモ&lt;/a&gt;で設定ファイルをDropboxで同期する方法を書いたのだけれど、意図しないタイミングで設定が同期されてコンフリクトが頻繁に発生するので、設定をGitで管理することにした。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://dl.dropboxusercontent.com/u/12208857/img/sublime_sync.png&quot; class=&quot;image-on-frame-small&quot; /&gt;&lt;/p&gt;

&lt;p&gt;設定ファイルにはアクセスキーなども含まれており、変更履歴を外部に公開するのはよくない。そこで今回はDropbox上にリモートリポジトリを作成する。同期をGitとDropboxの2段階にすることで「&lt;strong&gt;過去の状態に戻しやすくなる&lt;/strong&gt;」「&lt;strong&gt;任意のタイミングで同期できる&lt;/strong&gt;」というメリットがある。&lt;/p&gt;

&lt;h3 id=&quot;section&quot;&gt;1台目の手順&lt;/h3&gt;

&lt;p&gt;まずはDropbox上にリモートリポジトリを作成する。&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;mkdir -p ~/Dropbox/Git &lt;span class=&quot;o&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;cd&lt;/span&gt; ~/Dropbox/Git
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;git init —bare sublime.git&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;次にSublimeの設定フォルダへ移動してgit initを実行。ignoreするファイルは&lt;cite&gt;&lt;a href=&quot;https://sublime.wbond.net/docs/syncing&quot;&gt;Syncing - Package Control&lt;/a&gt;&lt;/cite&gt;を参考にした。Dropboxのシンボリックリンクにしている場合は元に戻してから行うこと。&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;cd&lt;/span&gt; ~/Library/Application&lt;span class=&quot;se&quot;&gt;\ &lt;/span&gt;Support/Sublime&lt;span class=&quot;se&quot;&gt;\ &lt;/span&gt;Text&lt;span class=&quot;se&quot;&gt;\ &lt;/span&gt;3/Packages/User
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;subl .gitignore &lt;span class=&quot;c&quot;&gt;# 下記のファイルを.gitignoreに書く&lt;/span&gt;
	Package&lt;span class=&quot;se&quot;&gt;\ &lt;/span&gt;Control.last-run
	Package&lt;span class=&quot;se&quot;&gt;\ &lt;/span&gt;Control.ca-list
	Package&lt;span class=&quot;se&quot;&gt;\ &lt;/span&gt;Control.ca-bundle
	Package&lt;span class=&quot;se&quot;&gt;\ &lt;/span&gt;Control.system-ca-bundle
	Package&lt;span class=&quot;se&quot;&gt;\ &lt;/span&gt;Control.cache/
	Package&lt;span class=&quot;se&quot;&gt;\ &lt;/span&gt;Control.ca-certs/
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;git init
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;git remote add origin ~/Dropbox/Git/sublime.git
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;git add .
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;git commit -m &lt;span class=&quot;s2&quot;&gt;&amp;quot;init&amp;quot;&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;git push origin master&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h3 id=&quot;section-1&quot;&gt;2台目の手順&lt;/h3&gt;

&lt;p&gt;既存の設定フォルダを削除してからgit clone.&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;cd&lt;/span&gt; ~/Library/Application&lt;span class=&quot;se&quot;&gt;\ &lt;/span&gt;Support/Sublime&lt;span class=&quot;se&quot;&gt;\ &lt;/span&gt;Text&lt;span class=&quot;se&quot;&gt;\ &lt;/span&gt;3/Packages
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;rm -rf User
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;git clone ~/Dropbox/Git/sublime.git User&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;以後は変更の度にcommitして、push/pullで同期すれば良い。設定ファイルのありかを毎回タイプするのは面倒なので、自分は下記のエイリアスを作成している。.zshrcや.bashrcに書いておけばcd_sublime_userで楽に移動できる。&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;nb&quot;&gt;alias &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;cd_sublime_user&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;cd ~/Library/Application\ Support/Sublime\ Text\ 3/Packages/User&amp;quot;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
</description>
        <pubDate>Fri, 07 Nov 2014 00:00:00 +0900</pubDate>
        <link>http://shoya.io/blog/sublime-sync/</link>
        <guid isPermaLink="true">http://shoya.io/blog/sublime-sync/</guid>
        
        <category>Infrastructure</category>
        
        
        <category>coffee</category>
        
      </item>
    
      <item>
        <title>実験を始める前のチェックリスト</title>
        <description>&lt;p&gt;被験者を募ってデータをとることがよくある。やり直しがきかないので、実験(データの記録)を始める前にはいつも細心の注意を払っている。この「気をつけていることリスト」を研究室のwikiに書いておこうと思ったのだけれど、非公開にすることでもないような気がするので、ここにまとめてみた。「体にセンサを取り付けて決められた行動(タスク)をとる」という実験を想定して項目をあげる。&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;タスクをまず自分で体験して記録の漏れをなくす。&lt;/li&gt;
  &lt;li&gt;実験手順をプロトコルとして記述しておく。&lt;/li&gt;
  &lt;li&gt;実験中は全景が分かるground truth videoをWebカメラで撮影する。&lt;/li&gt;
  &lt;li&gt;各センサの同期に使うユニークな動きをタスクの開始前に入れる。&lt;/li&gt;
  &lt;li&gt;記録されたデータをテストにかけて、データの欠損がないか確認する。&lt;/li&gt;
  &lt;li&gt;データの記録時間は必要よりやや長めに設定しておく。&lt;/li&gt;
  &lt;li&gt;記録装置のバッテリ切れに注意する。&lt;/li&gt;
&lt;/ul&gt;
</description>
        <pubDate>Thu, 06 Nov 2014 00:00:00 +0900</pubDate>
        <link>http://shoya.io/blog/protocol/</link>
        <guid isPermaLink="true">http://shoya.io/blog/protocol/</guid>
        
        <category>Note</category>
        
        
        <category>coffee</category>
        
      </item>
    
      <item>
        <title>「How Google Works」読んだ</title>
        <description>&lt;p&gt;組織を成功に導く人材として、「ビジネスセンス」「専門知識」「クリエイティブなエネルギー」「自分で手を動かして業務を遂行しようとする姿勢」を兼ね揃えた人たちがいる。この本ではそういった人たちを「&lt;strong&gt;スマート・クリエイティブ&lt;/strong&gt;」と呼び、&lt;strong&gt;彼らにとって働きやすい環境とは何か、その環境をどうやってマネジメントすればよいか&lt;/strong&gt;について述べている。&lt;/p&gt;

&lt;div class=&quot;babylink-box&quot; style=&quot;overflow: hidden; font-size: small; zoom: 1; margin: 15px 0; text-align: left;&quot;&gt;&lt;div class=&quot;babylink-image&quot; style=&quot;float: left; margin: 0px 15px 10px 0px; width: 75px; height: 75px; text-align: center;&quot;&gt;&lt;a href=&quot;http://www.amazon.co.jp/exec/obidos/ASIN/4532319552/mrk1869-22/&quot; rel=&quot;nofollow&quot; target=&quot;_blank&quot;&gt;&lt;img style=&quot;border-top: medium none; border-right: medium none; border-bottom: medium none; border-left: medium none;&quot; src=&quot;http://ecx.images-amazon.com/images/I/41wP3LRm7QL._SL75_.jpg&quot; width=&quot;52&quot; height=&quot;75&quot; /&gt;&lt;/a&gt;&lt;/div&gt;&lt;div class=&quot;babylink-info&quot; style=&quot;overflow: hidden; zoom: 1; line-height: 120%;&quot;&gt;&lt;div class=&quot;babylink-title&quot; style=&quot;line-height: 120%;&quot;&gt;&lt;a href=&quot;http://www.amazon.co.jp/exec/obidos/ASIN/4532319552/mrk1869-22/&quot; rel=&quot;nofollow&quot; target=&quot;_blank&quot;&gt;How Google Works (ハウ・グーグル・ワークス)  ―私たちの働き方とマネジメント&lt;/a&gt;&lt;/div&gt;&lt;div class=&quot;babylink-manufacturer&quot; style=&quot;margin-bottom: 5px;&quot;&gt;エリック・シュミット, ジョナサン・ローゼンバーグ, アラン・イーグル&lt;/div&gt;&lt;/div&gt;&lt;div class=&quot;booklink-footer&quot; style=&quot;clear: left&quot;&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;スマート・クリエイティブについては本から(ほぼ1節まるごと)引用している記事があるのでこちらを読むのがおすすめ。&lt;a href=&quot;http://www.lifehacker.jp/2014/10/141014book_to_read.html&quot;&gt;Googleの現場には何が起きていたか。前CEOたちが語る「スマート・クリエイティブ」の成功論 - lifehacker&lt;/a&gt; 自分もやがてはこのようなセンスを身につけた人になりたいし、スマート・クリエイティブの働き方を尊重してくれる文化に出会えたらいいなと思う。&lt;/p&gt;

&lt;p&gt;特に感銘をうけたのが&lt;strong&gt;良い意味の“働きすぎ”&lt;/strong&gt;という節。社員に責任と自由を与えることで、社員が自分に最適なワークライフ・バランスを見つけ実現できると書かれている。&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;2012年にヤフーCEOになった直後に、シリコンバレーで最も有名なワーキングマザーのひとりになったマリッサ・メイヤーは、燃え尽き症候群の原因は働きすぎではなく、自分にとって本当に大切なことを諦めなければならなくなったときに起こる、と語っている。スマート・クリエイティブに決定権を与えよう。そうすれば、自分にとって好ましい働き方はどんなものか、最適な判断を下すだろう。
&lt;cite&gt;How Google Works&lt;/cite&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;とても共感できる。自分はいま半年ほどいわゆるバーンアウトで体調を崩している。そのきっかけになった時期というのが、確かにやるべきことに追われてやりたいことを犠牲にし始めた頃だった気がする。時間は有限でありやるべきことを優先すべきなのは分かる。でもいろんなことに挑戦したい性分なのでついたくさん抱えてしまう。今の悩みは、多忙自体ではなく、やる気がでないことによるパフォーマンスの低下と、限られた時間内にタスクそれぞれに対して満足のいく成果が出せない葛藤にあると思う。この半年間で&lt;strong&gt;やるべきこととやりたいことのバランスは大事&lt;/strong&gt;ということを痛感した。&lt;/p&gt;

&lt;p&gt;話がそれたので元に戻そう。この本を通じて、ワークライフ・バランス、ナレッジマネジメント、コミュニケーションなど、働きやすい環境をどういう視点で見つけるか(あるいは作るか)ということを学んだ。もちろん、やや過酷ではあるが目標を実現するための近道になる環境もあると思う。今後就職するならばどのようなバランスでどういった職場を渡るべきか、選択肢になる一冊だった。&lt;/p&gt;
</description>
        <pubDate>Wed, 05 Nov 2014 00:00:00 +0900</pubDate>
        <link>http://shoya.io/blog/how-google-works/</link>
        <guid isPermaLink="true">http://shoya.io/blog/how-google-works/</guid>
        
        <category>Note</category>
        
        
        <category>coffee</category>
        
      </item>
    
      <item>
        <title>Sublime Text3導入メモ</title>
        <description>&lt;p&gt;最近VimからSublime Text3に乗り換えました。この記事は導入方法についてのメモです。&lt;/p&gt;

&lt;h3 id=&quot;homebrew-cask&quot;&gt;homebrew-caskからインストール&lt;/h3&gt;

&lt;p&gt;アプリケーションはAppStore &amp;gt; homebrew-cask &amp;gt; 手動で管理する主義なので、Sublime Textをhomebrew-caskからインストール。デフォルトのbrew caskからインストールできるSublime Textのversionは2なので注意。version3を追加する。&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;brew tap caskroom/homebrew-versions
brew cask install sublime-text3&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h3 id=&quot;package-control&quot;&gt;Package Control&lt;/h3&gt;

&lt;p&gt;プラグイン管理ツールであるPackage Controlをインストールする。&lt;br /&gt;
メニューバーから View &amp;gt; Show Consoleを開く。下記を入力して実行する。&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;import urllib.request,os,hashlib&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;h&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;7183a2d3e96f11eeadd761d777e62404&amp;#39;&lt;/span&gt; + &lt;span class=&quot;s1&quot;&gt;&amp;#39;e330c659d4bb41d3bdf022e94cab3cd0&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;pf&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;Package Control.sublime-package&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;ipp&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; sublime.installed_packages_path&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; urllib.request.install_opener&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt; urllib.request.build_opener&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt; urllib.request.ProxyHandler&lt;span class=&quot;o&quot;&gt;())&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;by&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; urllib.request.urlopen&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;http://sublime.wbond.net/&amp;#39;&lt;/span&gt; + pf.replace&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39; &amp;#39;&lt;/span&gt;, &lt;span class=&quot;s1&quot;&gt;&amp;#39;%20&amp;#39;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;))&lt;/span&gt;.read&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;dh&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; hashlib.sha256&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;by&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;.hexdigest&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; print&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;Error validating download (got %s instead of %s), please try manual install&amp;#39;&lt;/span&gt; % &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;dh, h&lt;span class=&quot;o&quot;&gt;))&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; dh !&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; h &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt; open&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;os.path.join&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt; ipp, pf&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;, &lt;span class=&quot;s1&quot;&gt;&amp;#39;wb&amp;#39;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;.write&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;by&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;インストールが完了したらcommand+shift+p &amp;gt; install packageで起動できる。パッケージ名を検索して選択するとインストールされる。インストールしたパッケージリストは以下に作成される。&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;~/Library/Application&lt;span class=&quot;se&quot;&gt;\ &lt;/span&gt;Support/Sublime&lt;span class=&quot;se&quot;&gt;\ &lt;/span&gt;Text&lt;span class=&quot;se&quot;&gt;\ &lt;/span&gt;3/Packages/User/Package&lt;span class=&quot;se&quot;&gt;\ &lt;/span&gt;Control.sublime-settings&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;とりあえず入れたパッケージ&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
	&lt;span class=&quot;s2&quot;&gt;&amp;quot;installed_packages&amp;quot;&lt;/span&gt;:
	&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;
		&lt;span class=&quot;s2&quot;&gt;&amp;quot;ColorPicker&amp;quot;&lt;/span&gt;,
		&lt;span class=&quot;s2&quot;&gt;&amp;quot;Gist&amp;quot;&lt;/span&gt;,
		&lt;span class=&quot;s2&quot;&gt;&amp;quot;Git&amp;quot;&lt;/span&gt;,
		&lt;span class=&quot;s2&quot;&gt;&amp;quot;HTML5&amp;quot;&lt;/span&gt;,
		&lt;span class=&quot;s2&quot;&gt;&amp;quot;Jekyll&amp;quot;&lt;/span&gt;,
		&lt;span class=&quot;s2&quot;&gt;&amp;quot;Markdown Preview&amp;quot;&lt;/span&gt;,
		&lt;span class=&quot;s2&quot;&gt;&amp;quot;SCSS&amp;quot;&lt;/span&gt;,
		&lt;span class=&quot;s2&quot;&gt;&amp;quot;Theme - itg.flat&amp;quot;&lt;/span&gt;,
		&lt;span class=&quot;s2&quot;&gt;&amp;quot;Theme - Soda&amp;quot;&lt;/span&gt;
	&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;参考: &lt;a href=&quot;https://sublime.wbond.net/installation&quot;&gt;Installation - Package Control&lt;/a&gt;&lt;/p&gt;

&lt;h3 id=&quot;pc&quot;&gt;複数PC間での設定ファイル同期&lt;/h3&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;~/Library/Application&lt;span class=&quot;se&quot;&gt;\ &lt;/span&gt;Support/Sublime&lt;span class=&quot;se&quot;&gt;\ &lt;/span&gt;Text&lt;span class=&quot;se&quot;&gt;\ &lt;/span&gt;3/Packages/User/&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;に作成されるファイルをDropboxなどに入れてシンボリックリンクを貼れば良い。&lt;/p&gt;

&lt;p&gt;1台目&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;nb&quot;&gt;cd&lt;/span&gt; ~/Library/Application&lt;span class=&quot;se&quot;&gt;\ &lt;/span&gt;Support/Sublime&lt;span class=&quot;se&quot;&gt;\ &lt;/span&gt;Text&lt;span class=&quot;se&quot;&gt;\ &lt;/span&gt;3/Packages/
mkdir ~/Dropbox/Sublime
mv User ~/Dropbox/Sublime/
ln -s ~/Dropbox/Sublime/Use&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;2台目&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;nb&quot;&gt;cd&lt;/span&gt; ~/Library/Application&lt;span class=&quot;se&quot;&gt;\ &lt;/span&gt;Support/Sublime&lt;span class=&quot;se&quot;&gt;\ &lt;/span&gt;Text&lt;span class=&quot;se&quot;&gt;\ &lt;/span&gt;3/Packages/
rm -r User
ln -s ~/Dropbox/Sublime/User&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Gitで管理してgithubに置く場合はアクセスキーやトークンの取り扱いに注意。プライベートリポジトリ推奨。また下記のファイルは.gitignoreに書いて同期しないように設定する。&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Package Control.last-run&lt;/li&gt;
  &lt;li&gt;Package Control.ca-list&lt;/li&gt;
  &lt;li&gt;Package Control.ca-bundle&lt;/li&gt;
  &lt;li&gt;Package Control.system-ca-bundle&lt;/li&gt;
  &lt;li&gt;Package Control.cache/&lt;/li&gt;
  &lt;li&gt;Package Control.ca-certs/&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;参考: &lt;a href=&quot;https://sublime.wbond.net/docs/syncing&quot;&gt;Syncing - Package Control&lt;/a&gt;&lt;/p&gt;

&lt;h3 id=&quot;section&quot;&gt;ターミナルから起動&lt;/h3&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;subl &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;ファイル名&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;# ファイル名を開く&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;subl . &lt;span class=&quot;c&quot;&gt;# カレントディレクトリを開く&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h3 id=&quot;section-1&quot;&gt;利用者の声&lt;/h3&gt;

&lt;blockquote class=&quot;twitter-tweet&quot; lang=&quot;ja&quot;&gt;&lt;p&gt;Sublime Textのおかげで楽しく論文を書けるようになりました！(23歳・大学生)&lt;/p&gt;&amp;mdash; Shoya Ishimaru (@shoya140) &lt;a href=&quot;https://twitter.com/shoya140/status/526782092554694658&quot;&gt;2014, 10月 27&lt;/a&gt;&lt;/blockquote&gt;
&lt;script async=&quot;&quot; src=&quot;//platform.twitter.com/widgets.js&quot; charset=&quot;utf-8&quot;&gt;&lt;/script&gt;

</description>
        <pubDate>Tue, 28 Oct 2014 00:00:00 +0900</pubDate>
        <link>http://shoya.io/blog/hello-sublime/</link>
        <guid isPermaLink="true">http://shoya.io/blog/hello-sublime/</guid>
        
        <category>Programming</category>
        
        
        <category>server</category>
        
      </item>
    
      <item>
        <title>クックパッドのサマーインターンシップに参加しました</title>
        <description>&lt;p&gt;課題解決型の5-daysインターンシップに参加して、スマートフォンアプリを開発しました。&lt;/p&gt;

&lt;blockquote class=&quot;twitter-tweet&quot; lang=&quot;ja&quot;&gt;&lt;p&gt;インターン修了しました。楽しかったー！ &lt;a href=&quot;http://t.co/AmkZVaX4qs&quot;&gt;pic.twitter.com/AmkZVaX4qs&lt;/a&gt;&lt;/p&gt;&amp;mdash; Shoya Ishimaru (@shoya140) &lt;a href=&quot;https://twitter.com/shoya140/status/507864832872153088&quot;&gt;2014, 9月 5&lt;/a&gt;&lt;/blockquote&gt;
&lt;script async=&quot;&quot; src=&quot;//platform.twitter.com/widgets.js&quot; charset=&quot;utf-8&quot;&gt;&lt;/script&gt;

&lt;h3 id=&quot;section&quot;&gt;内容&lt;/h3&gt;

&lt;p&gt;初日の午前中に「クックパッドのサービス開発」に関する講義を受けて、それからディレクター+エンジニアの2人1組のチームを組み、5日間でテーマに沿ったアプリを開発するという内容でした。完成したアプリは個人でリリースできないので発表資料を載せておきます。&lt;/p&gt;

&lt;script async=&quot;&quot; class=&quot;speakerdeck-embed&quot; data-id=&quot;42a7685017f40132350b2ae5b5e9153b&quot; data-ratio=&quot;1.33333333333333&quot; src=&quot;//speakerdeck.com/assets/embed.js&quot;&gt;&lt;/script&gt;

&lt;h3 id=&quot;section-1&quot;&gt;課題解決駆動開発&lt;/h3&gt;

&lt;p&gt;インターンの最初に言われたことは「&lt;strong&gt;クックパッドは課題解決の会社である&lt;/strong&gt;」ということです。クックパッドは基盤技術力の高さで有名なことから技術至上主義な雰囲気の会社だと思っていたのですが、インターンを通じて感じた印象は少し異なっていて、技術を使いたいからサービスを作るのではなく、まずユーザの抱える課題があり、それを解決するための手段として技術がある、という文化をもっているようでした。&lt;/p&gt;
&lt;pre&gt;
(ユーザ)は
(欲求)したいが
(課題)できないので
(製品の特徴)ことに価値がある
&lt;/pre&gt;
&lt;p&gt;という価値仮説シートをもとに、ユーザの欲求を満たせない理由である課題とその解決策を明確にし、課題解決のために技術を使います。&lt;/p&gt;

&lt;p&gt;インターン期間中には定期的に進捗報告・フィードバックタイムがあるのですが、実装手段よりも、自分たちの考えた価値仮説について鋭い指摘や質問をいただき、課題解決について深く深く考えることができました。&lt;/p&gt;

&lt;h3 id=&quot;section-2&quot;&gt;いかに実装しないか&lt;/h3&gt;

&lt;p&gt;今回のインターンでは&lt;a href=&quot;http://mrk1869.com/blog/hatena_intern/&quot;&gt;はてなインターン&lt;/a&gt;(2年前！)で経験した技術力不足に対する悔しさをバネに、持てる技術力を出し惜しみなく発揮することができました。(時間に余裕をもって開発したり、レシピのレコメンドに自然言語処理を使ったり、操作性やUIを作りこんだり、チーム内でアプリの開発進捗をTestFlightで共有した。)&lt;/p&gt;

&lt;p&gt;一方で、技術的面白さを求めすぎて課題解決に直接関係ない機能を盛り込んでしまったという反省があります。最終日には「実装は可能な限り小さな労力と少ない時間でできるもの(MVP)に絞って、アプリの価値仮説検証をもっと練ればよかったのでは」という意見をいただきました。僕の開発スタイルは「とにかく作ってみたほうが早い」に寄りすぎている感じがあるので、インターンを通じて、できるだけ「実装しない」なかで仮説の検証を繰り返す大切さを認識しました。&lt;/p&gt;

&lt;h3 id=&quot;section-3&quot;&gt;おわりに&lt;/h3&gt;

&lt;p&gt;クックパッドの短期インターンシップは「ユーザの課題を解決するとはどういうことか」を学ぶことができる濃い5日間でした。&lt;strong&gt;ものづくりが好きな人にはぜひ参加することをおすすめします！&lt;/strong&gt;(技術的な刺激にはやや物足りなかった印象もあるので、バリバリ開発したい・技術的に成長したい人は&lt;a href=&quot;http://staffblog.cookpad.com/entry/2014/07/01/184000&quot;&gt;長期インターンシップやアルバイト&lt;/a&gt;に応募すると良いかもしれません。)&lt;/p&gt;

&lt;p&gt;サポートしていただいた社員の方々、参加者のみんな、そしてチームメンバーの辻くん、5日間お世話になりました！ありがとうございました！&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://dl.dropboxusercontent.com/u/12208857/img/cookpad_internship02.jpg&quot; class=&quot;image-on-frame-medium&quot; /&gt;&lt;/p&gt;

&lt;p&gt;(おまけ)miyagawaさんに会えてテンション最高潮の&lt;a href=&quot;http://rebuild.fm/&quot;&gt;rebuild.fm&lt;/a&gt;リスナーインターン&lt;/p&gt;
</description>
        <pubDate>Sun, 07 Sep 2014 00:00:00 +0900</pubDate>
        <link>http://shoya.io/blog/cookpad_internship/</link>
        <guid isPermaLink="true">http://shoya.io/blog/cookpad_internship/</guid>
        
        <category>Event</category>
        
        <category>Note</category>
        
        
        <category>coffee</category>
        
      </item>
    
      <item>
        <title>Tornadoのデバッグモードを有効にする</title>
        <description>&lt;p&gt;Tornadoには多くのWebアプリフレームワーク同様にデバックモードがある。これを有効にすることで、pythonコードの更新をサーバの再起動なしに反映させたり、ファイルのキャッシュを無効にしたり、tracebackをブラウザ上に表示したりといった機能を利用することができる。&lt;/p&gt;

&lt;p&gt;デバッグモードを有効にするには、tornado.web.Applicationのインスタンス作成時にhandlersと一緒にdebug=Trueを付加すれば良い。&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;n&quot;&gt;app&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;tornado&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;web&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Application&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;handlers&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;r&amp;quot;/&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;  &lt;span class=&quot;n&quot;&gt;IndexHandler&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)],&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;debug&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;bp&quot;&gt;True&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Applicationクラスを作る場合はsettingsにディクショナリで指定する。&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;k&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Application&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;tornado&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;web&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Application&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;__init__&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
        &lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;board&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Board&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;handlers&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;
            &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;r&amp;quot;/&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;IndexHander&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt;
            &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;r&amp;quot;/socket&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;SocketHandler&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;settings&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;debug&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;options&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;debug&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;tornado&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;web&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Application&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;__init__&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;handlers&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;**&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;settings&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;自分は下記のようにtornado.optionsを使ってport, debugの２つをコマンドラインから入力できるようにしておき、本番環境と開発環境を簡単に切り替えられるようにしている。&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;kn&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;tornado.options&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;define&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;options&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;define&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;port&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;default&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;8000&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;help&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;run on the given port&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;type&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;int&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;define&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;debug&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;default&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;False&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;help&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;run the server in debug mode&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;type&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;bool&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;__name__&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;#39;__main__&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;tornado&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;options&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;parse_command_line&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;app&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;tornado&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;web&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Application&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;handlers&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;r&amp;quot;/&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;  &lt;span class=&quot;n&quot;&gt;IndexHandler&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)],&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;debug&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;options&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;debug&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;http_server&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;tornado&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;httpserver&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;HTTPServer&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;app&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;http_server&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;listen&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;options&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;port&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;tornado&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ioloop&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;IOLoop&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;instance&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;start&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

</description>
        <pubDate>Tue, 26 Aug 2014 00:00:00 +0900</pubDate>
        <link>http://shoya.io/blog/tornado_debug/</link>
        <guid isPermaLink="true">http://shoya.io/blog/tornado_debug/</guid>
        
        <category>Programming</category>
        
        
        <category>server</category>
        
      </item>
    
  </channel>
</rss>
